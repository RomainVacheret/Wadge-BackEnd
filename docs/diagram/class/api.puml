@startuml api
!include ../style/commons.style

package model {
    package food {
        class Food {}
    }

    package fridge {
        class FridgeFood {}
    }

    package recipe {
        class Recipe {}
        class Ingredient{}
    }
}

package com.fasterxml.jackson.databind {
    class ObjectMapper {}
    class JsonNode {}
}

package service.food {
    class FoodService {}
}

package service.fridge {
    class FridgeService {}
}

package service.recipe {
    class RecipeService {}
}

package service.shopping{
    class ShoppingService{}
}

package api {
    class FoodController {
        - foodService: FoodService <<final>>
        + this(foodService: FoodService): FoodController
        + getAllFood(): List<Food>
        + getFoodFromMonth(month: string): List<Food>
        + getFoodFromMonthByDays(month: string): List<Food>
        + convert(node: JsonNode): Optional<Double>
    }

    class FridgeController {
        - fridgeService: FridgeService <<final>>
        - mapper: ObjectMapper <<final>>
        + this(fridgeService: FridgeService): FridgeController
        + getAllFridge(): List<FridgeFood>
        + addAllToFridge(food: JsonNode): boolean
        + getExpirationAlerts(): map<String, List<FridgeFood>>
        + deleteUsingId(ids: JsonNode): List<FridgeFood>
        + deleteFromFridge(food: JsonNode): List<FridgeFood>
    }

    class RecipeController {
        - recipeService: RecipeService <<final>>
        + this(recipeService: RecipeService, fridgeService: FridgeService): RecipeController
        + getAllRecipes(): List<Recipe>
        + getRecipesUsingFridge(): List<Recipe>
        + getRecipesUsingListFood(listFood : JsonNode): List<Recipe>
        + getRecipesFromMarmiton(ingredients: JsonNode): List<Recipe>
        + getRecipesIngredients(recipes : Recipe): Map<String, String>
        + addFavorie( recipe:Recipe):void
        + removeFavorite(recipe:Recipe ):List<Recipe>
        + getDoneList():List<Recipe>
        + getFavorieList():List<Recipe>
        + addToDone( recipe:Recipe):void
        + getSelectedRecipes(node: Map<String,Parameter>): List<Recipe>

    }
     
    class ShoppingController{
        - shoppingService: ShoppingService <<Final>>
        + this(shoppingService: ShoppingService): ShoppingController
        + getShoppingList(): Set<Ingredient>
        + addToShoppingList(node: JsonNode): Set<Ingredient>
        + deleteFromShoppingList(node: JsonNode): Set<Ingredient>

    }
}

FoodController *--> Food
FoodController o..> FoodService

FridgeController *--> FridgeFood
FridgeController o--> ObjectMapper
FridgeController o..> FridgeService
FridgeController o..> JsonNode

RecipeController *--> Recipe
RecipeController o..> RecipeService
RecipeController o..> FridgeService

ShoppingController o..> ShoppingService
ShoppingController *..> Ingredient
@enduml

