@startuml service
!include ../style/commons.style

package dao.api {
    interface IFoodDao {}
    interface IFridgeDao {}
    interface IRecipeDao {}
}

package model.food {
    class Food {}
    enum Month {}
}

package model.fridge {
    class FridgeFood {}
    class FoodElement {}
}

package model.recipe {
    class Recipe {}
}

package service {
    package food {
        class FoodService {
            - foodDao: IFoodDao <<static>>
            + this(dao: FoodDao): FoodService
            + getAllFood(): List<Food>
            + getFoodFromGivenMonth(month: Month): List<Food>
            + sortByDays(food: List<Food>): List<Food>
        }
    }

    package fridge {
        class FridgeService {
            - fridgeDao: IFridgeDao <<static>>
            + this(dao: FridgeDao): FridgeService
            + getAllFridge(): List<FridgeFood>
            + getExpirationList(): List<FridgeFood>
            + addAllToFridge(food: List<FridgeFood>): boolean
            - getExpirationDateFromPredicate(): List<FridgeFood>
        }

        class FoodElementPredicatesFactory {
            - dateFormater: SimpleDateFormat
            - currentDate: Date
            - instance: FoodElementPredicatesFactory
            - this(): FoodElementPredicatesFactory
            - dateDifference(d1: Date, d2: Date): long <<static>>
            + getInstance(): FoodElementPredicatesFactory <<static>>
            + dateProcessing(date: string): long
            - getPredicate(type: RecallType): Predicate<FoodElement>
        }
        
        enum RecallType {
            TWO_DAYS, FIVE_DAYS, SEVEN_DAYS, FOURTEEN_DAYS, EXPIRED, OTHER;
        }
    }

    package recipe {
        package api {
            interface RecipeSelection {
                select(): RecipeSelection
                sort(): List<Recipe>
            }
        }
        package impl {
            class RecipeService {
                - recipeDao: IRecipeDao <<static>>
                + this(dao: IRecipeDao): RecipeService
                + getAllRecipes(): List<Recipe>
                + getRecipesUsingFridge(products: Map<RecallType, List<string>>): List<Recipe>
            }

            class FridgeSelection implements RecipeSelection {
                - recipes: List<Recipe>
                - scores: List<Map.Entry<Integer, Recipe>>
                ~ scoringMap: Map<string, Integer>
                ~ ingredientScoring: Function<Ingredient, Optional<Integer>>
                ~ recipeScoring: Function<List<Ingredient>, Integer>
                ~ recipeToEntry: Function<Recipe, Map.Entry<Integer, Recipe>>
                + this(recipes: List<Recipe>, products: Map<RecallType, List<string>>): FridgeSelection
                ~ addToSet(mySet: Set<string>, key: string, value: integer): void
                ~ defineScoringMap(products: Map<RecallType, List<string>>): void
            }
        }
    }
}

FoodService o--> IFoodDao
FoodService *..> Food
FoodService *..> Month

FridgeService o--> IFridgeDao
FridgeService o..> FoodElementPredicatesFactory
FridgeService *--> FridgeFood

FoodElementPredicatesFactory *..> FoodElement
FoodElementPredicatesFactory o..> RecallType

RecipeService o--> IRecipeDao
RecipeService *..> Recipe
RecipeService o..> RecallType

FridgeSelection *--> Recipe
FridgeSelection o..> RecallType

@enduml