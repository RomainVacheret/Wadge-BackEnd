@startuml dao
!include ../style/commons.style

package com.fasterxml.jackson.databind {
    class ObjectMapper {}
}

package model {
    package food {
        class Food {}
    }

    package fridge {
        class FridgeFood {}
    }

    package recipe {
        class Recipe {}
        package external{
            class MarmitonRecipe{}
        }
    }
}

package dao {
    package api {
        interface IFoodDao {
            getAllFoods(): List<Food>
        }

        interface IFridgeDao {
            getAllFridge(): List<FridgeFood>
            addAllToFridge(food: List<FridgeFood>): boolean
            insertFridgeFood(id UUID, food: FridgeFood): boolean
            insertFridgeFood(food: FridgeFood): boolean
            getFridgeFood(name: string): FridgeFood
            getFridge(): Map<string, FridgeFood>
            getFridgeFoodFromName(name: string): Optional<FridgeFood>
            addFoodElementToFridgeFood(fridgeFood: name, element:FoodElement): boolean
            deleteFromFridge(food: string, id: UUID): void
            deleteUsingId(ids: Set<Map.Entry<UUID, string>>): void
            saveData(): void
        }

        interface IRecipeDao {
            getAllRecipes(): List<Recipe>
        }

        interface IExternalRecipeDao {
            writeRecipeExternal(): void
            recipeExternalFromUrl(search: string): List<MarmitonRecipe>
            toRecipe(recipes: List<MarmitonRecipe>): List<Recipe>
        }
        interface ISpecificRecipeDao{
           getRecipes(): List<Recipe>
	       writeRecipe( recipe:Recipe) :void
	       addRecipe(recipes:List<Recipe> ):void
	       deletefromRecipe( link:String ):void
        }
    }

    package impl {
        class JsonFoodDao implements IFoodDao {
            - food: List<Food> <<final>>
            - mapper: ObjectMapper <<final>>
            ~ FILE_NAME: List<Food> <<static final>>
            + this(): JsonFoodDao
        }

        class JsonFridgeDao implements IFridgeDao {
            - fridge: List<FridgeFood> <<final>>
            - mapper: ObjectMapper <<final>>
            ~ FILE_NAME: List<Food> <<static final>>
            + this(): JsonFridgeDao
        }

        class JsonRecipeDao implements IRecipeDao {
            - recipes: List<Recipe> <<final>>
            - mapper: ObjectMapper <<final>>
            ~ FILE_NAME: List<Food> <<static final>>
            + this(): JsonFridgeDao
        }

        class MarmitonRecipeDao implements IExternalRecipeDao {
            - mapper: ObjectMapper <final>
            ~ recipeExternals: Map<string, MarmitonRecipe>
            ~ FILE_NAME: String <<static final>>
            ~ BASE_URL: string <<static final>>
            ~ URL: string <<static final>>
            + this(): MarmitonRecipeDao
            - timeToMinute(time: string): int
        }
        class JsonFavoriteRecipeDao implements ISpecificRecipeDao {
            - ObjectMapper mapper << final >>
        	- favorites :Map<String,Recipe> <<static final>>
        	~ FILE_FAVORITE :String <<static final >>
        	- recipes :List<Recipe>
        	+ this()
        }
        class JsonDoneRecipeDao implements ISpecificRecipeDao {
            -  ObjectMapper mapper <<final>>
            - doneRecipes :Map<String,Recipe> <<static final>>
            - recipes :List<Recipe>
            ~ FILE_DONE_RECIPE :String <<static final >>
            + this()
         }
        class MarmitonRecipeHelper{
            - MarmitonRecipeHelper()
            + timeToMinutes(time: String): int <<Static>>
            + convertDifficulty(difficulty: String): int <<Static>>
        }
    }
}

JsonFoodDao *..> Food
JsonFoodDao o..> ObjectMapper

JsonFridgeDao *..> FridgeFood
JsonFridgeDao o..> ObjectMapper

JsonRecipeDao *..> Recipe
JsonRecipeDao o..> ObjectMapper

IExternalRecipeDao *..> Recipe
IExternalRecipeDao *..> MarmitonRecipe

ISpecificRecipeDao *..>Recipe
JsonFavoriteRecipeDao *..>Recipe
JsonFavoriteRecipeDao o..> ObjectMapper

JsonDoneRecipeDao *..>Recipe
JsonDoneRecipeDao o..> ObjectMapper
@enduml
