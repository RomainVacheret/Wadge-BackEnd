@startuml dao
!include ../style/commons.style

package com.fasterxml.jackson.databind {
    class ObjectMapper {}
}

package model {
    package food {
        class Food {}
    }

    package fridge {
        class FridgeFood {}
    }

    package recipe {
        class Recipe {}
        package external{
            class MarmitonRecipe{}
        }
    }
}

package dao {
    package api {
        interface IFoodDao {
            getAllFoods(): List<Food>
        }

        interface IFridgeDao {
            getAllFridge(): List<FridgeFood>
            addAllToFridge(food: List<FridgeFood>): boolean
            insertFridgeFood(id UUID, food: FridgeFood): boolean
            insertFridgeFood(food: FridgeFood): boolean
            getFridgeFood(name: string): FridgeFood
            getFridge(): Map<string, FridgeFood>
            getFridgeFoodFromName(name: string): Optional<FridgeFood>
            addFoodElementToFridgeFood(fridgeFood: name, element:FoodElement): boolean
            deleteFromFridge(food: string, id: UUID): void
            deleteUsingId(ids: Set<Map.Entry<UUID, string>>): void
            saveData(): void
        }

        interface IRecipeDao {
            getAllRecipes(): List<Recipe>
            getAllRecipes(recipes: List<Recipe>): List<Recipe>
        }

        interface IExternalRecipeDao {
            writeRecipeExternal(): void
            recipeExternalsFromUrl(search: string): List<MarmitonRecipe>
            toRecipe(recipes: List<MarmitonRecipe>): List<Recipe>
        }
        interface ISpecificRecipeDao{
            getFavoritesRecipes():List<Recipe>
            getDoneRecipes():List<Recipe>
          	writeFavoriteRecipe(Recipe recipe) :void
          	writeDoneRecipe(Recipe recipe) :void
          	addRecipeFavorite(List<Recipe> recipes):void
            addRecipeDone(List<Recipe> recipes):	void
          	deletefavoriteRecipe(String link ):void
        }
    }

    package impl {
        class JsonFoodDao implements IFoodDao {
            - food: List<Food> <<final>>
            - mapper: ObjectMapper <<final>>
            ~ FILE_NAME: String <<static final>>
            + this(): JsonFoodDao
        }

        class JsonFridgeDao implements IFridgeDao {
            - fridge: List<FridgeFood> <<final>>
            - mapper: ObjectMapper <<final>>
            ~ FILE_NAME: String <<static final>>
            + this(): JsonFridgeDao
        }

        class JsonRecipeDao implements IRecipeDao {
            - recipes: List<Recipe> <<final>>
            - mapper: ObjectMapper <<final>>
            ~ FILE_NAME: String <<static final>>
            + this(): JsonFridgeDao
        }

        class MarmitonRecipeDao implements IExternalRecipeDao {
            - mapper: ObjectMapper <<final>>
            ~ recipeExternals: Map<string, MarmitonRecipe>
            ~ FILE_NAME: String <<static final>>
            ~ BASE_URL: String <<static final>>
            ~ URL: String <<static final>>
            + this(): MarmitonRecipeDao
            toRecipe:(recipes: List<MarmitonRecipe) List<Recipe>
        }
        class JsonSpecificRecipeDao implements ISpecificRecipeDao {
            - mapper: ObjectMapper <<final>>
        	- favorites: Map<String,Recipe> <<static final>>
        	~ FILE_FAVORIT: String <<static final >>
        	- doneRecipes: Map<String,Recipe> <<static final>>
            - recipes: List<Recipe>
             ~ FILE_DONE_RECIPE: String <<static final >>
        	- recipesDone: List<Recipe>
        	+ this(): JsonFavoriteRecipeDao
        }
        class MarmitonRecipeHelper{
            - this(): MarmitonRecipeHelper
            + timeToMinutes(time: String): int <<static>>
            + convertDifficulty(difficulty: String): int <<static>>
        }
    }
}

JsonFoodDao *..> Food
JsonFoodDao o..> ObjectMapper

JsonFridgeDao *..> FridgeFood
JsonFridgeDao o..> ObjectMapper

JsonRecipeDao *..> Recipe
JsonRecipeDao o..> ObjectMapper

IExternalRecipeDao *..> Recipe
IExternalRecipeDao *..> MarmitonRecipe

ISpecificRecipeDao *..>Recipe
JsonSpecificRecipeDao *..>Recipe
JsonSpecificRecipeDao o..> ObjectMapper
@enduml
